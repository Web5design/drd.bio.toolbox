#!/bin/env ruby
#
# Finds coverage using samtools pileup input.
# Notice samtools pileup only reports ref positions where at least
# one read covers it. We work out of that. That may not be what
# you want. You may want to have a real per base coverage instead
# of using binning.
#
require File.expand_path(File.dirname(__FILE__)) + "/common"

include Help
include Common
include Statistics
usage=<<-EOF
Usage: #{File.basename(__FILE__)} <window_size>

Example: 

$ time samtools pileup my.sorted.merged.bam | awk '{print $4}' | calc_coverage_stats 500 | run_R_coverage_plot.sh output.png title

NOTICE: I am assuming your bam is sorted by coordinate.
EOF
Help.set_usage_text usage

Help.error "Invalid number of arguments." if ARGV.size != 1 
Help.error "No data in stdin." unless Common.data_in_stdin?                                                                                                                                                                                          
w_size = ARGV[0].to_i

# Main
#
i=1
data=[]
t=[]
n=0
$stdin.each_line do |l|
  if i % w_size == 0
    data << [ Statistics.mean(t), Statistics.standard_deviation(t) ]
    t=[]
    n=0
  end                                  
  t << l.to_i
  n+=1 
  i+=1
end                                
                                  
data.each_with_index {|v,i| printf "%d %.2f %.2f\n", i, v[0], v[1]}
