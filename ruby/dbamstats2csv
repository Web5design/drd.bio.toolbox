#!/bin/env ruby
#
# Converts flagstats output to csv
# 
#
require File.expand_path(File.dirname(__FILE__)) + "/common"
include Common
include Help
usage =<<EOF
Usage: 
  $ dbamstats my.bam | #{File.basename(__FILE__)} <sample_id>"
EOF
Help.set_usage_text usage
Help.error "No data in stdin." unless data_in_stdin?
Help.error "No data in stdin." unless ARGV.size == 1


#Number of raw paired reads:88004	
#Number of raw single end reads:30465	
#Number of mapped paired reads:77001	
#Number of mapped unpaired reads:11003	
#Number of mapped single end reads:	30465
#Number of mapped paired reads pcr duplicates:	18922
#Number of mapped unpaired reads pcr duplicates:	1726
#Number of mapped single end reads pcr duplicates:	2471
#Number of ends at mapping quality 0-255:	188413:0	36:1	 ...

vals = []
$stdin.readlines.each do |l| 
  next unless l =~ /reads/
  k, v = l.split(":")
  vals << v.gsub(/\s+/, '')
end

puts "raw_reads, raw_single, mapped_paired, paired_one_end_mapped, mapped_single, paired_dups, unpaired_dups, single_dups"
vals = [ARGV[0]] + vals
vals.each {|e| printf "%s ", e  }
puts ""

